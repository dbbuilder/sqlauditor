name: Deploy UI to Azure Static Web Apps

on:
  push:
    branches: [ main, master ]
    paths:
      - 'src/SqlAnalyzer.Web/**'
      - '.github/workflows/deploy-swa.yml'
  workflow_dispatch:

env:
  APP_LOCATION: "src/SqlAnalyzer.Web"
  API_LOCATION: ""  # No API in SWA, using external API
  OUTPUT_LOCATION: "dist"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy to Azure Static Web Apps
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd ${{ env.APP_LOCATION }}
        npm ci
        
    - name: Build app
      run: |
        cd ${{ env.APP_LOCATION }}
        npm run build
      env:
        VITE_API_URL: https://sqlanalyzer-api.azurewebsites.net
        VITE_ENABLE_MOCK_DATA: false
        
    - name: Copy SWA config
      run: |
        cp ${{ env.APP_LOCATION }}/staticwebapp.config.json ${{ env.APP_LOCATION }}/${{ env.OUTPUT_LOCATION }}/
        
    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: ${{ env.APP_LOCATION }}
        api_location: ${{ env.API_LOCATION }}
        output_location: ${{ env.OUTPUT_LOCATION }}
        
    - name: Post-deployment verification
      run: |
        echo "üöÄ Deployment complete!"
        echo "Static Web App should be available at: https://sqlanalyzer-web.azurestaticapps.net"
        echo "Waiting 30 seconds for deployment to propagate..."
        sleep 30
        
        # Test the deployment
        echo "Testing deployment..."
        HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://sqlanalyzer-web.azurestaticapps.net)
        if [ "$HTTP_STATUS" == "200" ]; then
          echo "‚úÖ Site is accessible!"
        else
          echo "‚ö†Ô∏è Site returned status: $HTTP_STATUS"
        fi