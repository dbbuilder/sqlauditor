name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'

jobs:
  api-e2e-tests:
    name: API E2E Tests
    runs-on: ubuntu-latest
    
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          MSSQL_SA_PASSWORD: Test@123456!
          MSSQL_PID: Developer
        ports:
          - 15525:1433
        options: >-
          --health-cmd "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Test@123456! -Q 'SELECT 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Run API E2E Tests
      run: |
        cd tests/SqlAnalyzer.Api.Tests.E2E
        dotnet test --no-build --verbosity normal \
          --logger "trx;LogFileName=api-test-results.trx" \
          --logger "html;LogFileName=api-test-results.html" \
          --results-directory ./TestResults
      env:
        ConnectionStrings__TestDatabase: Server=localhost,15525;Database=TestDB;User Id=sa;Password=Test@123456!;TrustServerCertificate=true;
    
    - name: Upload API Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: api-test-results
        path: tests/SqlAnalyzer.Api.Tests.E2E/TestResults/
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: API E2E Tests
        path: 'tests/SqlAnalyzer.Api.Tests.E2E/TestResults/*.trx'
        reporter: dotnet-trx

  web-e2e-tests:
    name: Web UI E2E Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: src/SqlAnalyzer.Web/package-lock.json
    
    - name: Install API dependencies
      run: |
        cd src/SqlAnalyzer.Api
        dotnet restore
        dotnet build
    
    - name: Install Web dependencies
      run: |
        cd src/SqlAnalyzer.Web
        npm ci
    
    - name: Install Playwright
      run: |
        cd tests/SqlAnalyzer.Web.Tests.E2E
        npm ci
        npx playwright install --with-deps
    
    - name: Run Web E2E Tests
      run: |
        cd tests/SqlAnalyzer.Web.Tests.E2E
        npm test
    
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: tests/SqlAnalyzer.Web.Tests.E2E/playwright-report/
        retention-days: 30
    
    - name: Upload Playwright Videos
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-videos
        path: tests/SqlAnalyzer.Web.Tests.E2E/test-results/

  integration-test:
    name: Full Integration Test
    needs: [api-e2e-tests, web-e2e-tests]
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
    
    - name: Run Full E2E Test Suite
      run: |
        chmod +x run-e2e-tests.sh
        ./run-e2e-tests.sh all
    
    - name: Upload Test Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: full-test-results
        path: |
          tests/*/TestResults/
          tests/*/playwright-report/